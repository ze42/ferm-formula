# File maintained by salt
# Any changes to this file will be removed
#
# update pillar: ferm:policies:filter:<chain>:<policy>
# possibly with  ferm:policies:filter:_ip:<4|6>
{%- from "ferm/map.jinja" import config %}

{%- macro domains_by_ip(domain) %}
{%- if domain|string == '4' -%}
      ip
{%- elif domain|string == '6' -%}
      ip6
{%- else -%}
      (ip {%- if config.ip6 %} ip6 {%- endif %})
{%- endif -%}
{%- endmacro %}
{%- from "ferm/map.jinja" import config %}

{%- set has_ip6 = config.ip6 %}
{%- set policies = config.policies %}

{%- for table, chains_info in policies|dictsort %}
{%-   set domain = domains_by_ip(chains_info.get('_ip')) %}
# {{ table }}
domain {{ domain }}
table {{ table }} {
{%-   for chain, policy in chains_info|dictsort %}
{%-     if table|upper == 'FILTER' and policy|upper == 'AUTO' %}
{%-       if chain|upper == 'INPUT' %}
{%-         if config.rules.get('ingress') %}
{%-           set policy = 'DROP' %}
{%-         else %}
{%-           set policy = 'ACCEPT' %}
{%-         endif %}
{%-       elif chain|upper == 'OUTPUT' %}
{%-         if config.rules.get('egress') %}
{%-           set policy = 'DROP' %}
{%-         else %}
{%-           set policy = 'ACCEPT' %}
{%-         endif %}
{%-       else %}{#- FORWARD #}
{%-         set policy = 'DROP' %}
{%-       endif %}
{%-     endif %}
{%-     if chain != '_ip' %}
    chain {{ chain|upper }} policy {{ policy|upper }};
{%-     endif %}
{%-   endfor %}
}
{%- endfor %}
